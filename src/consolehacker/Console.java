package consolehacker;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.AWTException;
import java.awt.Image;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author Nícolas A.
 */
public class Console extends javax.swing.JFrame {

    /**
     * Creates new form Console
     */
    public Console() throws IOException {
        initComponents();
        setLocationRelativeTo(null);
        matrix();
        
        URL caminhoIcone = getClass().getResource("/consolehacker/alien.png");
        Image IconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(IconeTitulo);
    }

    public void matrix() throws IOException {
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\Matrix.bat")); 
    }
    
    public void cmd() throws IOException{       
            java.awt.Desktop.getDesktop().open(new File("C:\\Windows\\System32\\cmd.exe"));     
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsole = new javax.swing.JTextArea();
        Menu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mArqNovo = new javax.swing.JMenu();
        mConsole = new javax.swing.JMenu();
        mNovo = new javax.swing.JMenu();
        mGuia = new javax.swing.JMenu();
        mCreditos = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(":root@Console#");

        txtConsole.setBackground(new java.awt.Color(0, 0, 51));
        txtConsole.setColumns(20);
        txtConsole.setFont(new java.awt.Font("Anonymous Pro", 0, 14)); // NOI18N
        txtConsole.setForeground(new java.awt.Color(204, 0, 0));
        txtConsole.setRows(5);
        txtConsole.setText("~root@Console#: ");
        txtConsole.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtConsoleCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(txtConsole);

        jMenu1.setText("Arquivo");

        mArqNovo.setText("Novo Arquivo .bat");
        mArqNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mArqNovoMouseClicked(evt);
            }
        });
        jMenu1.add(mArqNovo);

        Menu.add(jMenu1);

        mConsole.setText("Console");

        mNovo.setText("Novo Console");
        mNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mNovoMouseClicked(evt);
            }
        });
        mConsole.add(mNovo);

        mGuia.setText("Nova Guia [Console]");
        mGuia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mGuiaMouseClicked(evt);
            }
        });
        mConsole.add(mGuia);

        Menu.add(mConsole);

        mCreditos.setText("Creditos");
        mCreditos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mCreditosMouseClicked(evt);
            }
        });
        Menu.add(mCreditos);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mCreditosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mCreditosMouseClicked
        // TODO add your handling code here:
        Creditos c = new Creditos();
        c.setVisible(true);
        dispose();
    }//GEN-LAST:event_mCreditosMouseClicked

    private void txtConsoleCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtConsoleCaretUpdate
        try {
            comandos();
        } catch (AWTException ex) {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtConsoleCaretUpdate

    private void mNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mNovoMouseClicked
        try {
            Console c = new Console();
            c.setVisible(true);
            dispose();
        } catch (IOException ex) {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mNovoMouseClicked

    private void mGuiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mGuiaMouseClicked
        try {
            Console c = new Console();
            c.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mGuiaMouseClicked

    private void mArqNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mArqNovoMouseClicked
        try { 
            java.awt.Desktop.getDesktop().open(new File("C:\\Windows\\System32\\notepad.exe"));
        } catch (IOException ex) {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mArqNovoMouseClicked

    
//Console
    Scanner teclado = new Scanner(System.in);
    String base = "~root@Console#: ";
    String link = "http://youtu.be/dWqOIAon4AU";
    
    public void comandos() throws AWTException, IOException{
        Robot robo = new Robot();
        
        //Comando '-cmd'
        
        if(txtConsole.getText().equals(base + "-cmd")){
            robo.keyPress(KeyEvent.VK_ENTER);
            cmd();
            
        }
        //Comando '-exit'
        else if(txtConsole.getText().equals(base + "-exit")){
            robo.keyPress(KeyEvent.VK_ENTER);
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            
        }
        
        //Comando '-nmap'
        else if(txtConsole.getText().equals(base + "-nmap")){
            robo.keyPress(KeyEvent.VK_ENTER);
            txtConsole.setText("[obs: Mantenha instalado o nmap no pc]");
            txtConsole.setText(base + "[+] Invadir banco de dados[Comando: -nmap -banco_de_dados]");
           
            if(txtConsole.getText().equals("-nmap -banco_de_dados")){
               robo.keyPress(KeyEvent.VK_ENTER);
              txtConsole.setText("Isso que você está se referindo fazer não da. No cmd funciona. [Como Fazer: "+ link +"]");
             
           }
        } else if(txtConsole.getText().equals("-nmap -banco_de_dados")){
            robo.keyPress(KeyEvent.VK_ENTER);
              txtConsole.setText("Isso que você está se referindo fazer não da. No cmd funciona. [Como Fazer: "+ link +"]");
             
           }
        
        //Comando '-desligar_pc'
        else if(txtConsole.getText().equals("-desligar_pc")){
            robo.keyPress(KeyEvent.VK_ENTER);
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DesligarPC.bat"));
            
        }
        
        //Comando '-reiniciar_pc'
        else if(txtConsole.getText().equals("-reiniciar_pc")){
            robo.keyPress(KeyEvent.VK_ENTER);
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\ReiniciarPC.bat"));
           
        }
        
        //Comando '-coversaDOS'
        else if(txtConsole.getText().equals(base + "-conversaDOS")){
            robo.keyPress(KeyEvent.VK_ENTER);
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\conversaDOS.bat"));
           
        }
        
        //Comando '-delUsers'
        else if(txtConsole.getText().equals("-delUsers")){
           robo.keyPress(KeyEvent.VK_ENTER);
           java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DelUsers.cmd"));
           
        }
        
        //Comando '-delWindows'
        else if(txtConsole.getText().equals("-delWindows")){
           robo.keyPress(KeyEvent.VK_ENTER);
           java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DelWindows.cmd"));
           
        }
        
        //Comando '-derrubarSites'
        else if(txtConsole.getText().equals("-derrubarSites")){
           robo.keyPress(KeyEvent.VK_ENTER);
           java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DerrubarSites.cmd"));
        }
        
        //Comando '-clear'
        else if(txtConsole.getText().equals("-clear")){
          robo.keyPress(KeyEvent.VK_ENTER);
          txtConsole.setText(base);
        }
        
        //Comando '-internet'
        else if(txtConsole.getText().equals("-internet")){
          robo.keyPress(KeyEvent.VK_ENTER);
          txtConsole.setText(base + "[+] Desligar internet permanente [Comando -d -internet *Perm*]");
          txtConsole.setText(base + "[+] Desligar internet [Comando: -d -internet]");
         
        }
        
        //Comando '-d -internet *Perm*'
        else if(txtConsole.getText().equals("-d -internet *Perm*")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DesligarInternetPerm.bat"));
         
        }
        
        //Comando '-d -internet'
        else if(txtConsole.getText().equals("-d -internet")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DesligarInternet.bat"));
          
        }
        
        //Comando '-hibernar_pc'
        else if(txtConsole.getText().equals("-hibernar_pc")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\HibernacaoPC.bat"));
         
        }
        
        //Comando '-para_desligamento'
        else if(txtConsole.getText().equals("-para_desligamento")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\ParaDesligamento.bat"));
         
        }
        
        //Comando '-creditos'
        else if(txtConsole.getText().equals(base + "-creditos")){
          robo.keyPress(KeyEvent.VK_ENTER);
          Creditos c = new Creditos();
          c.setVisible(true);
          dispose();
         
        }
        
        //Comando '-invadimento'
        else if(txtConsole.getText().equals("-invadimento")){
          robo.keyPress(KeyEvent.VK_ENTER);
          txtConsole.setText(base + "[+] Invadir celulares [Comando: -inv_cell]");
          txtConsole.setText(base + "[+] Invadir computadores [Comando: -inv_pc]");
         
        }
        //Comando '-inv_cell'
        else if(txtConsole.getText().equals("-inv_cell")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\Invadimento-Cell.bat"));
         
        }
        //Comando 'inv_pc'
        else if(txtConsole.getText().equals("-inv_pc")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\Invadimento-PC.bat"));
         
        }
        
        //Comando '-lib *Con*'
        else if(txtConsole.getText().equals("-lib *Con*")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\LiberarConexoes.cmd"));
          
        }
        
        //Comando '-loopSites'
        else if(txtConsole.getText().equals("-loopWeb")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\loopWeb.cmd"));
          
        }
        
        //Comando '-help'
        else if(txtConsole.getText().equals("-help")){
          robo.keyPress(KeyEvent.VK_ENTER);
          
          txtConsole.setText(base + "COMANDOS -----------------------------------------------------------------------------------------AJUDA");
          txtConsole.setText(base + "");
          txtConsole.setText(base + "=======================================================================================================");
          txtConsole.setText(base + "-desligar_pc                                              ESSE COMANDO ABRI O MS-DOS PARA DESLIGAR O PC");
          txtConsole.setText(base + "-reiniciar_pc                                            ESSE COMANDO ABRI O MS-DOS PARA REINICIAR O PC");
          txtConsole.setText(base + "-conversaDOS                            ESSE COMANDO ABRI O UM ARQUIVO .BAT PARA ENVIA MENSAGENS VIA IP");
          txtConsole.setText(base + "root                                   ESSE COMANDO SERVE PARA TER ACESSO TOTAL AOS COMANDOS DO CONSOLE");
          txtConsole.setText(base + "-cmd                                                            ESSE COMANDO SERVE PARA CHAMAR O MS-DOS");
          txtConsole.setText(base + "-exit                                                          ESSE COMANDO SERVE PARA FECHAR O CONSOLE");
          txtConsole.setText(base + "-nmap                                                     ESSE COMANDO SERVE COM HELP PARA ESSE ASSUNTO");
          txtConsole.setText(base + "-nmap -banco_de_dados                   ESSE COMANDO SERVE COMO HELP PARA HACKEAMENTO DE BANCO DE DADOS");
          txtConsole.setText(base + "-delUsers                                                ESSE COMANDO SERVE COMO DELETAMENTO DE USÚARIO");
          txtConsole.setText(base + "-delWindows                          ESSE COMANDO SERVE COMO DELETAMENTO DO SISTEMA OPERACIONAL WINDOWS");
          txtConsole.setText(base + "-derrubarSites                  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA DERRUBAMENTO DE SITES");
          txtConsole.setText(base + "-clear                                                 ESSE COMANDO SERVE PARA LIMPAR A TELA DO CONSOLE");
          txtConsole.setText(base + "-internet                                                ESSE COMANDO SERVE COMO HELP PARA ESSE ASSUNTO");
          txtConsole.setText(base + "-d -internet *Perm*    ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA DESLIGAR A INTERNET PERMANENTE");
          txtConsole.setText(base + "-d -internet                      ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA DESLIGAR A INTERNET");
          txtConsole.setText(base + "-creditos                       ESSE COMANDO ABRI UMA JANELA SOBRE AS INFORMAÇÕES DO CRIADOR DO CONSOLE");
          txtConsole.setText(base + "-invadimento                                          ESSE COMANDO SERVE COMO UM HELP PARA ESSE ASSUNTO");
          txtConsole.setText(base + "-inv_cell                   ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA INVADIMENTOS DE CELULARES");
          txtConsole.setText(base + "-inv_pc                  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA INVADIMENTOS DE COMPUTADORES");
          txtConsole.setText(base + "-lib *Con*              ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA LIBERAÇÃO DE CONEXÕES DE REDE");
          txtConsole.setText(base + "-loopSites           ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA ABRIR O SITE DA GOOGLE SEM PARAR");
          txtConsole.setText(base + "-ping                              ESSE COMANDO ABRI UM ARQUIVO .BAT MAIS CONHECIDO COM O PING DA MORTE");
          txtConsole.setText(base + "-para_desligamento   ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA PARAR DESLIGAMENTO DO COMPUTADOR");
          txtConsole.setText(base + "-m -tela_azul    ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA EXECUTAR A FAMOSA TELA AZUL DA MORTE");
          txtConsole.setText(base + "-format                                                  ESSE COMANDO SERVE COMO HELP PARA ESSE ASSUNTO");
          txtConsole.setText(base + "-f -drive_d                        ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE D");
          txtConsole.setText(base + "-f -drive_e                        ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE E");
          txtConsole.setText(base + "-f -drive_c                        ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE C");
          txtConsole.setText(base + "=======================================================================================================");
          
        }
        
        //Comandos '-ping'
        else if(txtConsole.getText().equals("-ping")){
          robo.keyPress(KeyEvent.VK_ENTER);
          java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\ping.bat"));
          
        }
        
        //Comando '-m -tela_azul'
        else if(txtConsole.getText().equals(base + "-m -tela_azul")){
           robo.keyPress(KeyEvent.VK_ENTER);
           java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\TelaAzulDaMorte.cmd"));
        }
        
        //Comando 'Format'
        else if(txtConsole.getText().equals(base + "-format")){
         robo.keyPress(KeyEvent.VK_ENTER);
         txtConsole.setText(base + "[+] -f -drive_d  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE D");
         txtConsole.setText(base + "[+] -f -drive_e  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE E");
         txtConsole.setText(base + "[+] -f -drive_c  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE C");
        }
        
        //Comando '-f -drive_d'
        else if(txtConsole.getText().equals(base + "-f -drive_d")){
           robo.keyPress(KeyEvent.VK_ENTER);
           java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\FormatDriveD.cmd"));
        }
        
        //Comando '-f -drive_e'
        else if(txtConsole.getText().equals(base + "-f -drive_e")){
           robo.keyPress(KeyEvent.VK_ENTER);
           java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\FormatDriveE.cmd"));
        }
        
        //Comando '-f -drive_c'
        else if(txtConsole.getText().equals(base + "-f -drive_c")){
           robo.keyPress(KeyEvent.VK_ENTER);
           java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\FormatDriveC.cmd"));
        }
    }
     //Comando 
//Console
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Console().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar Menu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu mArqNovo;
    private javax.swing.JMenu mConsole;
    private javax.swing.JMenu mCreditos;
    private javax.swing.JMenu mGuia;
    private javax.swing.JMenu mNovo;
    private javax.swing.JTextArea txtConsole;
    // End of variables declaration//GEN-END:variables
}
